export interface WorldTemplate {
  id: string;
  name: string;
  icon: string;
  description: string;
  features: string[];
  races: string[];
  classes: string[];
  magic: string[];
  locations: string[];
  bestiary: string[];
  artifacts: string[];
}

export const worldTemplates: WorldTemplate[] = [
  {
    id: "classic",
    name: "–ö–ª–∞—Å–∏—á–Ω–µ —Ñ–µ–Ω—Ç–µ–∑—ñ",
    icon: "üè∞",
    description:
      "–ö–æ—Ä–æ–ª—ñ–≤—Å—Ç–≤–∞, –ª–∏—Ü–∞—Ä—ñ, –º–∞–≥—ñ—è, –µ–ª—å—Ñ–∏, –≥–Ω–æ–º–∏, –æ—Ä–∫–∏. –°–≤—ñ—Ç —É —Å—Ç–∏–ª—ñ –¢–æ–ª–∫—ñ–Ω–∞ —á–∏ D&D.",
    features: ["‚öîÔ∏è –í–æ—ó–Ω–∏", "üßô‚Äç‚ôÇÔ∏è –ú–∞–≥—ñ—è", "üå≥ –õ—ñ—Å–∏", "üêâ –î—Ä–∞–∫–æ–Ω–∏"],
    races: ["–õ—é–¥–∏", "–ï–ª—å—Ñ–∏", "–ì–Ω–æ–º–∏", "–û—Ä–∫–∏", "–ì–æ–±–ª—ñ–Ω–∏", "–ì–æ–±—ñ—Ç–∏"],
    classes: ["–í–æ—ó–Ω", "–ú–∞–≥", "–ó–ª–æ–¥—ñ–π", "–ö–ª–µ—Ä–∏–∫", "–†–µ–π–Ω–¥–∂–µ—Ä", "–ü–∞–ª–∞–¥—ñ–Ω"],
    magic: ["–ï–ª–µ–º–µ–Ω—Ç–∞–ª—å–Ω–∞", "–°–≤—ñ—Ç–ª–∞", "–¢–µ–º–Ω–∞", "–î—Ä—É—ó–¥–Ω–∞"],
    locations: [
      "–ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç",
      "–ö–æ—Ä–æ–ª—ñ–≤—Å—Ç–≤–æ",
      "–õ—ñ—Å",
      "–ì–æ—Ä–∞",
      "–ú—ñ—Å—Ç–æ",
      "–ü—ñ–¥–∑–µ–º–µ–ª–ª—è",
    ],
    bestiary: ["–î—Ä–∞–∫–æ–Ω–∏", "–ì—Ä–∏—Ñ–æ–Ω–∏", "–¢—Ä–æ–ª—ñ", "–ì–æ–±–ª—ñ–Ω–∏", "–ï–ª–µ–º–µ–Ω—Ç–∞–ª—ñ"],
    artifacts: ["–ú–µ—á—ñ", "–ê–º—É–ª–µ—Ç–∏", "–ö—ñ–ª—å—Ü—è", "–ü–æ—Å–æ—Ö–∏"],
  },
  {
    id: "dark",
    name: "–¢–µ–º–Ω–µ —Ñ–µ–Ω—Ç–µ–∑—ñ",
    icon: "‚ò†Ô∏è",
    description: "–î–µ–º–æ–Ω–∏, –ø—Ä–æ–∫–ª—è—Ç—Ç—è, –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç–∏, –∂–æ—Ä—Å—Ç–æ–∫—ñ—Å—Ç—å. –ü–æ—Ö–º—É—Ä–∏–π —Å–≤—ñ—Ç.",
    features: ["üåë –¢–µ–º—Ä—è–≤–∞", "ü©∏ –ö—Ä–æ–≤", "ü¶á –í–∞–º–ø—ñ—Ä–∏", "üßô‚Äç‚ôÇÔ∏è –ù–µ–∫—Ä–æ–º–∞–Ω—Ç–∏"],
    races: ["–õ—é–¥–∏", "–í–∞–º–ø—ñ—Ä–∏", "–ü–µ—Ä–µ–≤–µ—Ä—Ç–Ω—ñ", "–î–µ–º–æ–Ω–∏", "–í—ñ–¥—å–º–∏"],
    classes: [
      "–ù–µ–∫—Ä–æ–º–∞–Ω—Ç",
      "–ú–∏—Å–ª–∏–≤–µ—Ü—å",
      "–í—ñ–¥—å–º–∞–∫",
      "–ß–∞–∫–ª—É–Ω",
      "–õ–∏—Ü–∞—Ä-—ñ–Ω–∫–≤—ñ–∑–∏—Ç–æ—Ä",
    ],
    magic: ["–ù–µ–∫—Ä–æ–º–∞–Ω—Ç—ñ—è", "–ö—Ä–æ–≤", "–¢—ñ–Ω—å", "–î–µ–º–æ–Ω–æ–ª–æ–≥—ñ—è"],
    locations: ["–†—É—ó–Ω–∏", "–ó–∞–Ω–µ–ø–∞–ª–µ –º—ñ—Å—Ç–æ", "–¢–µ–º–Ω–∏–π –ª—ñ—Å", "–ë–æ–ª–æ—Ç–æ", "–ö–∞—Ç–∞–∫–æ–º–±–∏"],
    bestiary: ["–í—ñ–¥—å–º–∏", "–£–ø–∏—Ä—ñ", "–î–µ–º–æ–Ω–∏", "–ß—É–¥–æ–≤–∏—Å—å–∫–∞ –Ω–æ—á—ñ"],
    artifacts: ["–ü—Ä–æ–∫–ª—è—Ç—ñ –∫–ª–∏–Ω–∫–∏", "–ö–Ω–∏–≥–∏ —Ç—ñ–Ω–µ–π", "–ê–º—É–ª–µ—Ç–∏ –∫—Ä–æ–≤—ñ"],
  },
  {
    id: "high-magic",
    name: "–í–∏—Å–æ–∫–∞ –º–∞–≥—ñ—è",
    icon: "‚ú®",
    description:
      "–ú–∞–≥—ñ—á–Ω—ñ –∞–∫–∞–¥–µ–º—ñ—ó, –ª—ñ—Ç–∞—é—á—ñ –æ—Å—Ç—Ä–æ–≤–∏, –ø–æ—Ä—Ç–∞–ª–∏. –°–≤—ñ—Ç, –¥–µ –º–∞–≥—ñ—è –≤—Å—é–¥–∏—Å—É—â–∞.",
    features: ["ü™Ñ –ß–∞—Ä—ñ–≤–Ω–∞ –ø–∞–ª–∏—á–∫–∞", "üîÆ –ö—Ä–∏—à—Ç–∞–ª–µ–≤–∞ –∫—É–ª—è", "üåå –ó–æ—Ä—è–Ω–µ –Ω–µ–±–æ"],
    races: ["–õ—é–¥–∏", "–ï–ª—å—Ñ–∏", "–î—Ä–∞–∫–æ–Ω–æ—Ä–æ–¥–∂–µ–Ω—ñ", "–§–µ—ó", "–ï–ª–µ–º–µ–Ω—Ç–∞–ª—ñ"],
    classes: ["–ê—Ä—Ö—ñ–º–∞–≥", "–ó–∞–∫–ª–∏–Ω–∞—á", "–ê–ª—Ö—ñ–º—ñ–∫", "–ú–∞–≥—ñ—á–Ω–∏–π —ñ–Ω–∂–µ–Ω–µ—Ä"],
    magic: ["–ü—Ä–æ—Å—Ç–æ—Ä–æ–≤–∞", "–ß–∞—Å–æ–≤–∞", "–ê–ª—Ö—ñ–º—ñ—è", "–Ü–ª—é–∑—ñ—ó", "–¢—Ä–∞–Ω—Å–º—É—Ç–∞—Ü—ñ—è"],
    locations: [
      "–õ—ñ—Ç–∞—é—á–∏–π –æ—Å—Ç—Ä—ñ–≤",
      "–ú–∞–≥—ñ—á–Ω–µ –º—ñ—Å—Ç–æ",
      "–ü–æ—Ä—Ç–∞–ª",
      "–ö—Ä–∏—Å—Ç–∞–ª—ñ—á–Ω–∞ –ø–µ—á–µ—Ä–∞",
    ],
    bestiary: ["–§–µ–Ω—ñ–∫—Å–∏", "–ú–∞–Ω—Ç–∏–∫–æ—Ä–∏", "–ú–∞–≥—ñ—á–Ω—ñ —Å—Ç–≤–æ—Ä—ñ–Ω–Ω—è"],
    artifacts: ["–ö—Ä–∏—Å—Ç–∞–ª–∏ —Å–∏–ª–∏", "–ú–∞–≥—ñ—á–Ω—ñ –∫–Ω–∏–≥–∏", "–ê—Ä—Ç–µ—Ñ–∞–∫—Ç–∏ —á–∞—Å—É"],
  },
  {
    id: "urban",
    name: "–ú—ñ—Å—å–∫–µ/—Å—É—á–∞—Å–Ω–µ —Ñ–µ–Ω—Ç–µ–∑—ñ",
    icon: "üåÜ",
    description: "–ú–∞–≥—ñ—è —É —Å—É—á–∞—Å–Ω–æ–º—É —Å—É—Å–ø—ñ–ª—å—Å—Ç–≤—ñ. –ú—ñ—Å—Ç–∞, —Ç–µ—Ö–Ω–æ–º–∞–≥—ñ—è, –¥–µ–º–æ–Ω–∏.",
    features: ["üöá –ú–µ—Ç—Ä–æ", "üßë‚Äçüíª –¢–µ—Ö–Ω–æ–º–∞–≥—ñ—è", "ü¶∏‚Äç‚ôÇÔ∏è –ì–µ—Ä–æ—ó"],
    races: ["–õ—é–¥–∏", "–í–∞–º–ø—ñ—Ä–∏", "–ü–µ—Ä–µ–≤–µ—Ä—Ç–Ω—ñ", "–§–µ—ó", "–î–µ–º–æ–Ω–∏"],
    classes: ["–ú–∞–≥-–¥–µ—Ç–µ–∫—Ç–∏–≤", "–ú–∏—Å–ª–∏–≤–µ—Ü—å", "–¢–µ—Ö–Ω–æ–º–∞–≥", "–®–∞–º–∞–Ω"],
    magic: ["–¢–µ—Ö–Ω–æ–º–∞–≥—ñ—è", "–Ü–ª—é–∑—ñ—ó", "–ú—ñ—Å—å–∫–∞ –º–∞–≥—ñ—è", "–†–∏—Ç—É–∞–ª–∏"],
    locations: ["–ú—ñ—Å—Ç–æ", "–ü—ñ–¥–∑–µ–º–∫–∞", "–•–º–∞—Ä–æ—á–æ—Å", "–§–∞–±—Ä–∏–∫–∞"],
    bestiary: ["–î–µ–º–æ–Ω–∏", "–î—É—Ö–∏", "–ú—ñ—Å—å–∫—ñ –ª–µ–≥–µ–Ω–¥–∏"],
    artifacts: ["–¢–µ—Ö–Ω–æ–º–∞–≥—ñ—á–Ω—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó", "–ê–º—É–ª–µ—Ç–∏", "–†–∏—Ç—É–∞–ª—å–Ω—ñ –ø—Ä–µ–¥–º–µ—Ç–∏"],
  },
  {
    id: "postapoc",
    name: "–ü–æ—Å—Ç–∞–ø–æ–∫–∞–ª—ñ–ø—Ç–∏—á–Ω–µ —Ñ–µ–Ω—Ç–µ–∑—ñ",
    icon: "‚ò¢Ô∏è",
    description: "–°–≤—ñ—Ç –ø—ñ—Å–ª—è –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∏. –ú—É—Ç–∞–Ω—Ç–∏, —Ä—É—ó–Ω–∏, –º–∞–≥—ñ—è –≤–∏–∂–∏–≤–∞–Ω–Ω—è.",
    features: ["üèöÔ∏è –†—É—ó–Ω–∏", "ü§ñ –ö—ñ–±–æ—Ä–≥–∏", "üå™Ô∏è –ü—É—Å—Ç–∫–∏"],
    races: ["–ú—É—Ç–∞–Ω—Ç–∏", "–í–∏–∂–∏–ª—ñ –ª—é–¥–∏", "–ö—ñ–±–æ—Ä–≥–∏", "–î—É—Ö–∏"],
    classes: ["–í–∏–∂–∏–≤–∞–ª—å–Ω–∏–∫", "–®–∞–º–∞–Ω", "–¢–µ—Ö–Ω–æ–º–∞–≥", "–†–µ–π–¥–µ—Ä"],
    magic: ["–†–∞–¥—ñ–∞—Ü—ñ–π–Ω–∞", "–¢–µ—Ö–Ω–æ–º–∞–≥—ñ—è", "–®–∞–º–∞–Ω—ñ–∑–º"],
    locations: ["–†—É—ó–Ω–∏ –º—ñ—Å—Ç–∞", "–ü—É—Å—Ç–∫–∞", "–ó–∞—Ä–∞–∂–µ–Ω–∞ –∑–æ–Ω–∞", "–ü—ñ–¥–∑–µ–º–µ–ª–ª—è"],
    bestiary: ["–ú—É—Ç–∞–Ω—Ç–∏", "–ö—ñ–±–µ—Ä-–∑–≤—ñ—Ä—ñ", "–î—É—Ö–∏ –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∏"],
    artifacts: [
      "–°—Ç–∞—Ä–æ–¥–∞–≤–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó",
      "–ê—Ä—Ç–µ—Ñ–∞–∫—Ç–∏ –º–∏–Ω—É–ª–æ–≥–æ",
      "–ú–∞–≥—ñ—á–Ω—ñ —Ä–µ–ª—ñ–∫–≤—ñ—ó",
    ],
  },
  {
    id: "custom",
    name: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π —à–∞–±–ª–æ–Ω",
    icon: "‚ûï",
    description:
      "–ü–æ—á–∞—Ç–∏ –∑ —á–∏—Å—Ç–æ–≥–æ –∞—Ä–∫—É—à–∞. –î–æ–¥–∞–π—Ç–µ —Å–≤–æ—ó —Ä–∞—Å–∏, –∫–ª–∞—Å–∏, –º–∞–≥—ñ—é, –ª–æ–∫–∞—Ü—ñ—ó —Ç–æ—â–æ.",
    features: ["üõ†Ô∏è –ü–æ–≤–Ω–∞ —Å–≤–æ–±–æ–¥–∞"],
    races: [],
    classes: [],
    magic: [],
    locations: [],
    bestiary: [],
    artifacts: [],
  },
];

// === –ü–æ–≤–Ω–∏–π –µ–∫—Å–ø–æ—Ä—Ç —à–∞–±–ª–æ–Ω—É —Å–≤—ñ—Ç—É ===
export async function exportFullWorldTemplate(worldId: number) {
  const [
    world,
    races,
    classes,
    magic,
    locations,
    creatures,
    artifacts,
    lore,
    characters,
    events,
    regions,
    relations,
  ] = await Promise.all([
    fetch(`/api/worlds/${worldId}`).then((r) => r.json()),
    fetch(`/api/worlds/${worldId}/races`).then((r) => r.json()),
    fetch(`/api/worlds/${worldId}/classes`).then((r) => r.json()),
    fetch(`/api/worlds/${worldId}/magic`).then((r) => r.json()),
    fetch(`/api/worlds/${worldId}/locations`).then((r) => r.json()),
    fetch(`/api/worlds/${worldId}/creatures`).then((r) => r.json()),
    fetch(`/api/worlds/${worldId}/artifacts`).then((r) => r.json()),
    fetch(`/api/worlds/${worldId}/lore`).then((r) => r.json()),
    fetch(`/api/worlds/${worldId}/characters`).then((r) => r.json()),
    fetch(`/api/worlds/${worldId}/events`).then((r) => r.json()),
    fetch(`/api/worlds/${worldId}/regions`).then((r) => r.json()),
    fetch(`/api/worlds/${worldId}/relations`)
      .then((r) => r.json())
      .catch(() => []),
  ]);

  const template = {
    name: world.name,
    description: world.description,
    icon: world.icon,
    features: world.features || [],
    races,
    classes,
    magic,
    locations,
    creatures,
    artifacts,
    lore,
    characters,
    events,
    regions,
    relations,
  };
  return template;
}

export async function saveWorldTemplateLocallyAndRemotely(worldId: number) {
  const template = await exportFullWorldTemplate(worldId);
  // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —É localStorage
  const saved = JSON.parse(
    localStorage.getItem("customWorldTemplates") || "[]"
  );
  localStorage.setItem(
    "customWorldTemplates",
    JSON.stringify([...saved, template])
  );
  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  await fetch("/api/world-templates", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(template),
  });
  return template;
}
